// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MyAxaBDD.Specifications
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MyAxa")]
    public partial class MyAxaFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MyAxa.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MyAxa", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("login and logout")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.TestCaseAttribute("yemibakare@yahoo.com", "Yemi1978", null)]
        public virtual void LoginAndLogout(string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Ignore"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("login and logout", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I navigate to myAxa homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And(string.Format("I enter username \"{0}\" and password \"{1}\"", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.When("I Click signIn", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("the overview page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
 testRunner.When("I click signOut", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("the myAxa homepage is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Incept And Register a Motor Policy In Myaxa")]
        [NUnit.Framework.TestCaseAttribute("Mr", "Register", "InMyAxa", "12", "05 - May", "1970", "Female", "tesst13@axa-uat.ie", "087", "0879567812", "Yes", "K32VP28", "Rented Accommodation", "Employed", "Accountant", "10D262", "Up to 5,000 km", "ROI (Full)", "9 years", "Insured in own name", "6+ Years Claims Free Driving", "Pay in full", "29", "More than 3 years", "02", "05 - May", "2010", "AA Insurance", "30/12/2017", "€5,001 to €7,000", "05", "12 - Dec", "2017", "4263971921001307", "02", "22", "123", "Test", "Yemi2018", "90009", null)]
        public virtual void InceptAndRegisterAMotorPolicyInMyaxa(
                    string title, 
                    string firstName, 
                    string lastName, 
                    string dayOfBirth, 
                    string birthMonth, 
                    string birthYear, 
                    string gender, 
                    string email, 
                    string areaCode, 
                    string phoneNumber, 
                    string eircodeYesNo, 
                    string eircode, 
                    string household, 
                    string employmentStatus, 
                    string occupation, 
                    string carRegNum, 
                    string kilometersDriven, 
                    string drivingLicence, 
                    string licenceAge, 
                    string recentInsurance, 
                    string numOfClaimFreeYears, 
                    string methodOfPayment, 
                    string startDate, 
                    string residency, 
                    string dayLicenceIssue, 
                    string monthLicenceIssue, 
                    string yearLicenceIssue, 
                    string currentInsurer, 
                    string existingPolicyExpirationDate, 
                    string carValue, 
                    string dayCarWasPurchased, 
                    string monthCarWasPurchased, 
                    string yearCarWasPurchased, 
                    string cardNumber, 
                    string cardExpMonth, 
                    string cardExpYear, 
                    string cvv, 
                    string cardholderName, 
                    string password, 
                    string vCode, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incept And Register a Motor Policy In Myaxa", exampleTags);
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
   testRunner.Given("user is at ROI Motor DS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
   testRunner.And("motor DS Your Detail section is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
   testRunner.When(string.Format("I input name \"{0}\" \"{1}\" \"{2}\"", title, firstName, lastName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
   testRunner.And(string.Format("date of birth\"{0}\" \"{1}\" \"{2}\"", dayOfBirth, birthMonth, birthYear), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
   testRunner.And(string.Format("I enter gender \"{0}\" and email\"{1}\"", gender, email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
   testRunner.And(string.Format("I input phone number\"{0}\" \"{1}\"", areaCode, phoneNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
   testRunner.And(string.Format("I enter adress with eircode \"{0}\"", eircode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
   testRunner.And(string.Format("I selected \"{0}\" \"{1}\" \"{2}\"", household, employmentStatus, occupation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
   testRunner.And(string.Format("I complete Your car section \"{0}\" \"{1}\"", carRegNum, kilometersDriven), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
   testRunner.And(string.Format("I complete driving history \"{0}\"\t\"{1}\" \"{2}\" \"{3}\"", drivingLicence, licenceAge, recentInsurance, numOfClaimFreeYears), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
   testRunner.And("I added NO additional driver and claims", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
   testRunner.And("I complete Your cover section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
  testRunner.And("Step two is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
  testRunner.And("I click Buy Now Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
  testRunner.And("Step three is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
  testRunner.And(string.Format("I Complete licence details \"{0}\" \"{1}\" \"{2}\"", dayLicenceIssue, monthLicenceIssue, yearLicenceIssue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
  testRunner.And(string.Format("I Complete Insurance details section \"{0}\"", existingPolicyExpirationDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
  testRunner.And(string.Format("I input car value \"{0}\" and date \"{1}\" \"{2}\" \"{3}\" to complete Car details sectio" +
                        "n", carValue, dayCarWasPurchased, monthCarWasPurchased, yearCarWasPurchased), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
  testRunner.And("I proceed to pay in full", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
  testRunner.And(string.Format("I enter my credit card details\"{0}\" \"{1}\" \"{2}\" \"{3}\" \"{4}\"", cardNumber, cardExpMonth, cardExpYear, cvv, cardholderName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
  testRunner.Then("Policy is successfully incepted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
  testRunner.When(string.Format("I complete your details section with a valid password: \"{0}\"", password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
  testRunner.And(string.Format("I Input verification code: \"{0}\"", vCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
  testRunner.Then("registration is successful", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
